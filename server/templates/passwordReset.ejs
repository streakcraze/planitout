<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
		/>
		<title>Reset Password</title>
		<style>
			body {
				margin: 0;
				display: flex;
				align-items: center;
				justify-content: center;
				height: 100vh;
				background: linear-gradient(100deg, #ff9800, #cddc39);
			}

			.card {
				background-color: white;
				padding: 20px;
				border-radius: 10px;
				box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
			}

			.topic {
				color: #43864f;
				font-size: 24px;
				font-weight: bold;
				margin-bottom: 10px;
				text-transform: capitalize;
				text-align: center;
			}

			.textfield-container {
				position: relative;
				display: flex;
				flex-direction: column;
				width: 300px;
			}

			.label {
				margin: 8px 0;
				font-size: 14px;
				color: #333;
			}

			.input {
				padding: 10px;
				font-size: 16px;
				border: 1px solid #ccc;
				border-radius: 4px;
				outline: none;
			}

			.input:focus {
				border-color: #2196f3;
				box-shadow: 0 0 5px rgba(33, 150, 243, 0.5);
			}

			.visibility-toggle {
				position: absolute;
				top: 50%;
				right: 8px;
				transform: translateY(-50%);
				margin-top: 15px;
				cursor: pointer;
				color: green;
			}

			.submit-button {
				background-color: #43864f;
				color: white;
				margin: 10px auto;
				padding: 15px 20px;
				border: none;
				border-radius: 4px;
				cursor: pointer;
			}

			.submit-button:hover {
				background-color: #60be71;
			}

			.error-message {
				color: red;
				margin-top: 5px;
				width: 300px;
				text-align: center;
			}

			.success-message {
				color: green;
				margin-top: 5px;
				width: 300px;
				text-align: center;
			}

			@media screen and (max-width: 600px) {
				.textfield-container {
					width: 230px;
				}

				.error-message,
				.success-message {
					width: 230px;
				}
			}
		</style>
	</head>

	<body>
		<div class="card">
			<div class="topic" id="topic">reset password</div>
			<div class="textfield-container">
				<label for="oldPassword" class="label">Old Password</label>
				<input
					type="password"
					id="oldPassword"
					name="oldPassword"
					class="input"
					placeholder="Enter password"
				/>
				<div
					class="visibility-toggle"
					id="oldPasswordIcon"
					onclick="togglePasswordVisibility('oldPassword')"
				>
					<i style="font-size: 24px" class="fa">&#xf070;</i>
				</div>
			</div>
			<div class="textfield-container">
				<label for="newPassword" class="label">New Password</label>
				<input
					type="password"
					id="newPassword"
					name="newPassword"
					class="input"
					placeholder="Enter password"
				/>
				<div
					class="visibility-toggle"
					id="newPasswordIcon"
					onclick="togglePasswordVisibility('newPassword')"
				>
					<i style="font-size: 24px" class="fa">&#xf070;</i>
				</div>
			</div>
			<div class="textfield-container">
				<label for="confirmPassword" class="label">Confirm New Password</label>
				<input
					type="password"
					id="confirmPassword"
					name="confirmPassword"
					class="input"
					placeholder="Enter password"
				/>
				<div
					class="visibility-toggle"
					id="confirmPasswordIcon"
					onclick="togglePasswordVisibility('confirmPassword')"
				>
					<i style="font-size: 24px" class="fa">&#xf070;</i>
				</div>
			</div>
			<div style="text-align: center">
				<button class="submit-button" onclick="submitForm()">Submit</button>
			</div>
			<div class="error-message" id="errorMessage"></div>
			<div class="success-message" id="successMessage"></div>
		</div>
	</body>

	<script>
		function togglePasswordVisibility(inputId) {
			const passwordInput = document.getElementById(inputId);
			const visibilityIcon = document.getElementById(inputId + "Icon");

			if (passwordInput.type === "password") {
				passwordInput.type = "text";
				visibilityIcon.innerHTML = `<i style="font-size: 24px" class="fa">
						&#xf06e;
					</i>`;
			} else {
				passwordInput.type = "password";
				visibilityIcon.innerHTML = `<i style="font-size: 24px" class="fa">
						&#xf070;
					</i>`;
			}
		}

		function submitForm() {
			const oldPassword = document.getElementById("oldPassword").value;
			const newPassword = document.getElementById("newPassword").value;
			const confirmPassword = document.getElementById("confirmPassword").value;
			const errorMessage = document.getElementById("errorMessage");
			const successMessage = document.getElementById("successMessage");

			errorMessage.textContent = "";
			successMessage.textContent = "";

			// Your validation logic
			if (!oldPassword || !newPassword || !confirmPassword) {
				errorMessage.textContent = "Please fill in all fields.";
			} else if (newPassword.length < 8 || newPassword.length > 20) {
				errorMessage.textContent =
					"New password must be between 8 and 20 characters.";
			} else if (!isValidPassword(newPassword)) {
				errorMessage.textContent =
					"New password must contain a combination of alphanumeric and symbol characters.";
			} else if (newPassword !== confirmPassword) {
				errorMessage.textContent =
					"New password and confirm password do not match.";
			} else {
				// Submit the form to the desired URL
				const formValues = {
					oldPassword,
					newPassword,
				};
				const url =
					"<%= serverURL %>" +
					"/api/users/passwordResetDetails/" +
					"<%= userId %>";
				fetch(url, {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify(formValues),
				})
					.then(async (response) => {
						if (response.ok) {
							const data = await response.json();
							successMessage.textContent = data.msg;
						} else {
							const data = await response.json();
							errorMessage.textContent = data.msg;
						}
					})
					.catch((error) => {
						// Handle error
						console.error("Error:", error);
					});
			}
		}

		function isValidPassword(password) {
			// check if the password contains a combination of alphanumeric and symbol characters
			const regex =
				/^(?=.*[a-zA-Z])(?=.*[0-9!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/;
			return regex.test(password);
		}
	</script>
</html>
